
- C program compile with "-g" flag
gcc main.c -g -Wall -o main

- Start profiling with "valgrind":
$ valgrind --leak-check=yes ./main
==4574== Memcheck, a memory error detector
==4574== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4574== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==4574== Command: ./main
==4574== Parent PID: 4383
==4574== 
==4574== error calling PR_SET_PTRACER, vgdb might block
==4574== Invalid write of size 1
==4574==    at 0x1092CE: main (main.c:18)
==4574==  Address 0x4a49040 is 0 bytes inside a block of size 20 free'd
==4574==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==4574==    by 0x1092C9: main (main.c:17)
==4574==  Block was alloc'd at
==4574==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==4574==    by 0x10923F: main (main.c:8)
==4574== 
==4574== Use of uninitialised value of size 8
==4574==    at 0x1092D5: main (main.c:21)
==4574== 
==4574== 
==4574== HEAP SUMMARY:
==4574==     in use at exit: 0 bytes in 0 blocks
==4574==   total heap usage: 2 allocs, 2 frees, 1,044 bytes allocated
==4574== 
==4574== All heap blocks were freed -- no leaks are possible
==4574== 
==4574== Use --track-origins=yes to see where uninitialised values come from
==4574== For lists of detected and suppressed errors, rerun with: -s
==4574== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


- Start profiling with "valgrind" with saving to log file:
valgrind --leak-check=yes --log-file="report.log" ./main
