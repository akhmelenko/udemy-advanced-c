time.h
char *ctime(const time_t *timep);
- Take an argument of data type time_t which represents calendar time. 
    When interpreted as an absolute time value, 
    it represents the number of seconds elapsed since the Epoch, 1970-01-01 00:00:00 +0000 (UTC)
- Returns a null-terminated string (size == 25) of the form "Wed Jun 30 21:49:08 1993\n"

time.h
struct tm *localtime(const time_t *timep);
- Take an argument of data type time_t which represents calendar time. 
    When interpreted as an absolute time value, 
    it represents the number of seconds elapsed since the Epoch, 1970-01-01 00:00:00 +0000 (UTC)

- Returns:
    - pointer to a sturcture of type tm (time is local for a timezone)
    - NULL if error

struct tm {
    int tm_sec;         /* seconds */
    int tm_min;         /* minutes */
    int tm_hour;        /* hours */
    int tm_mday;        /* day of the month */
    int tm_mon;         /* month */
    int tm_year;        /* year */
    int tm_wday;        /* day of the week */
    int tm_yday;        /* day in the year + 1900 */
    int tm_isdst;       /* daylight saving time */
};


char *asctime(const struct tm *tm);
- Take an argument of data type const struct tm
- Returns a null-terminated string (size == 26) of the form "Thu Apr 21 18:03:18 2022\n"


time_t mktime(struct tm *tm);
- Take an argument of data type struct tm
- fill the missing fields (tm_wday) of tm from tm_mday, tm_mon, tm_year
- Return a calendar time representation or -1 if error